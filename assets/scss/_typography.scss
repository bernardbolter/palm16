/******************************************************************************\
	Settings
\******************************************************************************/

//
// mixin for bullet proof font declaration syntax
//
@mixin declare-font-face($font-family, $font-filename, $font-weight : normal, $font-style :normal, $font-stretch : normal) {
@font-face {
font-family: '#{$font-family}';
src: url(font-path('#{$font-filename}.eot'));
src: url(font-path('#{$font-filename}.eot?#iefix')) format('embedded-opentype'),
url(font-path('#{$font-filename}.woff')) format('woff'),
url(font-path('#{$font-filename}.ttf')) format('truetype'),
url(font-path('#{$font-filename}.svg##{$font-family}')) format('svg');
font-weight: $font-weight;
font-style: $font-style;
font-stretch: $font-stretch;
}
}

@font-face {
    font-family: 'DIN30640StdNeuzeitGroteskLight';
    src: url('fonts/dinneuzeitgroteskstd-light.eot');
    src: url('fonts/dinneuzeitgroteskstd-light.eot') format('embedded-opentype'),
         url('fonts/dinneuzeitgroteskstd-light.woff') format('woff'),
         url('fonts/dinneuzeitgroteskstd-light.ttf') format('truetype'),
         url('fonts/dinneuzeitgroteskstd-light.svg#DIN30640StdNeuzeitGroteskLight') format('svg');
}

@include declare-font-face('DINNeuzeitGroteskStd-Light', 'dinneuzeitgroteskstd-light-webfont', 200);

// Variables
$base-font: 'DIN30640StdNeuzeitGroteskLight', sans-serif;
$body-font: 'Tinos', serif;
$base-line-height: 1.5;

/******************************************************************************\
    Font calculation mixins
\******************************************************************************/

// Font size mixin for REM output with PX fallback
@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

// Top margin mixin for REM output with PX fallback
@mixin leading-rows($size: 1) { margin-top: $size * $base-line-height * 1rem; }

// Bottom margin mixin for REM output with PX fallback
@mixin trailing-rows($size: 1) {
    margin-bottom: $size * $base-line-height * 1rem;
}

// Set standard font sizes in media querys
html {
    font-size: 62.5%;
}


/******************************************************************************\
	Standard font styling
\******************************************************************************/

body {
	font-family: $base-font;
	line-height: $base-line-height;
	font-weight: 400;
    @include font-size(1.4);
}

em, i {
	font-style: italic;
	line-height: inherit;
}

strong, b {
	font-weight: bold;
	line-height: inherit;
}

p,
ul,
ol {
    @include leading-rows(0);
    @include trailing-rows(1);
}

blockquote {
	position: relative;

	&:before {
		display: block;
		float: left;
		content: "\"";
		@include font-size(2.5);
		margin: 0 15px 15px 0;
	}
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
h5,
h6 {
	font-family: $base-font;
	line-height: 1.2;
    text-transform: uppercase;

    @include media($large) { word-wrap: normal; }
}

h1,
.h1 {
    @include font-size(2.5);
    @include leading-rows(1);
    @include trailing-rows(1);

    @include media($medium) { @include font-size(3); }
}

h2,
.h2 {
    @include font-size(1.8);
    @include leading-rows(2);
    @include trailing-rows(1);

    @include media($medium) { @include font-size(2); }
}

h3,
.h3 {
    @include font-size(1.1);
    @include leading-rows(1.5);
    @include trailing-rows(0.5);

    @include media($medium) { @include font-size(1.2); }
}

h4,
h5,
h6 {
	@include font-size(1);
	@include leading-rows(1.5);
    @include trailing-rows(0.5);
}

h2,
h3 { page-break-after: avoid; }

p,
h2,
h3 {
    orphans: 3;
    widows: 3;
}

p ~ h1 { @include leading-rows(2); }